# Задание-1:
# Матрицы в питоне реализуются в виде вложенных списков:
# Пример. Дано:
matrix = [[1, 0, 8],
          [3, 4, 1],
          [0, 4, 2]]
          
# Выполнить поворот (транспонирование) матрицы
# Пример. Результат:
# matrix_rotate = [[1, 3, 0],
#                  [0, 4, 4],
#                  [8, 1, 2]]

matrix = [[1, 0, 8],
          [3, 4, 1],
          [0, 4, 2]]
print(list(map(list, zip(*matrix))))

# Суть сложности hard: Решите задачу в одну строку

# Задание-2:
# Найдите наибольшее произведение пяти последовательных цифр в 1000-значном числе.
# Выведите произведение и индекс смещения первого числа последовательных 5-ти цифр.
# Пример 1000-значного числа:
number = """
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450"""

def per(number):
    number = number.replace('\n', '')
    dict_1 = dict()
    dict_2 = dict()
    k = 0
    m = 0
    dict_2 = {}
    mul = 1
    for i in range(len(number) -5):
        if not '0' in number[i:i+5]:
            dict_1[i] = number[i:i+5]
    k = 0
    for key, value in dict_1.items():
        dict_2[key] = reduce(lambda x, y: x * y, (list(map(int, dict_1[key]))))
    for key, value in dict_2.items():
        if value > k:
            k = value
            index = key
    return(index , k)
print(per(number))


# Задание-3 (Ферзи):
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били
# друг друга. Вам дана расстановка 8 ферзей на доске.
# Определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел,
# каждое число от 1 до 8 — координаты 8 ферзей.
# Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.
def coordinates(x,y):#задаем функцию, которая принимает 2 координаты "x" и "y" и на выходе получается словарь с клчами "y" и всеми возможными для них "x" (ходы только по диагонали)
    dict_1 = {}
    b1 = x + y#расчитываем коэфиценты b для функции вида y=kx + b(y = x - b для возрачтающего графика, y = b - x для убывающего)
    b2 = x - y
    list_1 = list()
    for i in range(1,9):
        if i == y:#Пропускаем значение когда "y" это та координата, которую мы задали
           continue
        if 0 < i + b2 < 9:
            list_1.append(i + b2)
        if 0 < b1 - i < 9:
            list_1.append(b1 - i)
        if len(list_1) == 0:
            continue
        list_1 = set(list_1)
        dict_1[i] = sorted(list(list_1))
        list_1 = list()
    return(dict_1)
f1 = list(map(int, input('Введите координаты первого ферзя через пробел x,y: ').split()))
f2 = list(map(int, input('Введите координаты второго ферзя через пробел x,y: ').split()))
f3 = list(map(int, input('Введите координаты третьего ферзя через пробел x,y: ').split()))
f4 = list(map(int, input('Введите координаты четвертого ферзя через пробел x,y: ').split()))
f5 = list(map(int, input('Введите координаты пятого ферзя через пробел x,y: ').split()))
f6 = list(map(int, input('Введите координаты шестого ферзя через пробел x,y: ').split()))
f7 = list(map(int, input('Введите координаты седьмого ферзя через пробел x,y: ').split()))
f8 = list(map(int, input('Введите координаты восьмого ферзя через пробел x,y: ').split()))
#Получаем словарь возможных ходов ферзя для всех введенных начальных координат:
fn1 = coordinates(*f1)
fn2 = coordinates(*f2)
fn3 = coordinates(*f3)
fn4 = coordinates(*f4)
fn5 = coordinates(*f5)
fn6 = coordinates(*f6)
fn7 = coordinates(*f7)
fn8 = coordinates(*f8)
#Создаем 2 сета, в одном все введенные "x" в другом все введенные "y".
# Если set получится неравным 8, значит удалились одинаковые элементы и условие не выполняется (ферзи бьют друг друга)
#Таким образом мы проверяем не бьют ли ферзи друг друга по вертикали или горизонтали
set1 = { f1[0], f2[0], f3[0], f4[0], f5[0], f6[0], f7[0], f8[0] }
set2 = { f1[1], f2[1], f3[1], f4[1], f5[1], f6[1], f7[1], f8[1] }
if len(set1) != 8 or len(set2) != 8:
    print('YES')
    exit()
list_res = [ fn1, fn2, fn3, fn4, fn5, fn6, fn7, fn8 ]
dict1 = dict()
#Создаем словарь со всеми возможными ходами для введеных координат и проверяем, не накладываются ли они с введеными первичными координатами ферзей:
for i in list_res:
    for key, value in i.items():
        try:
           dict1[key] = dict1[key] + value
        except KeyError:
            dict1[key] = value
def tr(lst):
    if lst[0] in dict1[lst[1]]:
        print('YES')
        exit()
l = [f1, f2, f3, f4, f5, f6, f7, f8]
list(map(tr, l))
print('NO')
