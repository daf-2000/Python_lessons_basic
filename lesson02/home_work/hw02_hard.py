__author__ = 'Донцов А.Ф.'

# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.

equation = 'y = -12x + 11111140.2121'
x = 2.5
# вычислите и выведите y

equation = 'y = -12x + 11111140.2121'
x = 2.5
k = str()
equation = equation.split()
k = float(equation[2][:-1])
b = float(equation[4])
print('y = {}'.format(x * k + b))



# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом 
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
date = '01.11.1985'

# Примеры некорректных дат
date = '01.22.1001'
date = '1.12.1001'
date = '-2.10.3001'




date = input("Введите дату в формате dd.mm.yyyy ")
day, month, year = date.split(".")
#Определяю в словаре по каждому месяцу количество дней и "правильные" года (длинновато получилось, конечно )) ):
dict_1 = { 'year': [i for i in range(1,10000)], '01': [ i for i in range(1,32) ], '02': [ i for i in range(1,30)], '03': [ i for i in range(1,32)], '04': [ i for i in range(1,31)], '05': [ i for i in range(1,32) ], '06': [ i for i in range(1,31)], '07': [ i for i in range(1,32) ], '08': [ i for i in range(1,32)], '09': [ i for i in range(1,31) ], '10': [ i for i in range(1,32) ], '11': [ i for i in range(1,31) ], '12': [ i for i in range(1,32) ]}

try:
   if int(day) not in dict_1[month] or len(str(day)) != 2 or len(str(month)) != 2 or len(str(year)) != 4 or int(year) not in dict_1['year']:
       print('Неверный формат')
       exit()
   else:
       print('date =  {}'.format(date))
except KeyError:
    print('неверный формат')
except ValueError:
    print('неверный формат')

	
	
	
	
####################################### Дата вариант 2:
import datetime
date = input('Введите дату в формате dd.mm.yyyy: ')
def validate(date_in):
    try:
        datetime.datetime.strptime(date_in, '%d.%m.%Y')
        print(date_in)
    except ValueError:
        print("Неверный формат, нужно dd.mm.yyyy")
validate(date)



# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты, 
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3

nk = 0
nb = 0
answer = int(input('Введите номер квартиры '))
# Вычисляем номер блока в котором находится квартира + общее количество этажей до конца блока:
while nk < answer:
    nb = nb + 1
    nk = nk + nb**2
et = (1+nb)*nb/2#Формула для вычесления суммы элеменов последовательности, так как количество этажей до последнего блока, это сумма этажей во всех предыдущих, то есть: n + (n+1) + (n+2)
# Вычисляем этаж и номер последней квартиры на этаже:
while answer <= nk - nb:
    nk = nk - nb
    et -= 1
print("Этаж {}, Порядковый номер на этаже {} ".format(int(et), answer - nk + nb))